name: Messaging Service CI/CD

# Triggers
on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'release/*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:

  ##########################
  # Build Job
  ##########################
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: temurin
          cache: maven

      # Set Version for Maven & Docker
      - name: Set Docker version
        id: set_version
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/release/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/release/}"
          else
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            VERSION="${BRANCH_NAME}-${GITHUB_SHA:0:7}"
          fi
          echo "VERSION=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT  # <-- Job Output fÃ¼r andere Jobs

      - name: Build JAR
        run: mvn clean package -Drevision=${{ steps.set_version.outputs.version }} -DskipTests -B

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: messaging-service-jar
          path: target/*.jar

  ##########################
  # Tests Job
  ##########################
  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: temurin
          cache: maven

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: messaging-service-jar
          path: target/

      - name: Run Maven Tests
        run: mvn verify -Dspring.profiles.active=test -B

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

  ##########################
  # Docker Build & Push Job
  ##########################
  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [ tests, build ]
    if: startsWith(github.ref_name, 'release/')
    env:
      IMAGE_REPO: baris1892/private
      IMAGE_TAG_FULL: messaging-service-${{ needs.build.outputs.version }}
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: messaging-service-jar
          path: target/
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG_FULL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ##########################
  # Deploy Job (Dummy for local k3s)
  ##########################
  deploy:
    name: Deploy to k3s (Dummy)
    runs-on: ubuntu-latest
    needs: [ docker, build ]
    if: startsWith(github.ref_name, 'release/')

    steps:
      - name: Dummy Deploy
        run: |
          echo "kubectl apply -f k8s/deployment.yaml with image: baris1892/private:messaging-service-${{ needs.build.outputs.version }}"
          echo "Skipping actual deployment (local cluster)"
